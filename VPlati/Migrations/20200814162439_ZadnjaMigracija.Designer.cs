// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VPlati.Models;

namespace VPlati.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200814162439_ZadnjaMigracija")]
    partial class ZadnjaMigracija
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("VPlati.Models.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "0e943048-19cc-42b4-99bb-a5965bfe1171",
                            Name = "admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "49fc6dad-6c16-4478-a574-aff9121f911b",
                            Name = "user",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("VPlati.Models.Komentar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("KomentarDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("KomentarText")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("KomentarUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlezalecId")
                        .HasColumnType("int");

                    b.Property<int>("SmerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlezalecId");

                    b.HasIndex("SmerId");

                    b.ToTable("Komentarji");
                });

            modelBuilder.Entity("VPlati.Models.NacinPreplezanjaSmeri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nacin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NacinPreplezanjaSmeri");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nacin = "Flash"
                        },
                        new
                        {
                            Id = 2,
                            Nacin = "Na Pogled"
                        },
                        new
                        {
                            Id = 3,
                            Nacin = "Rdeča Pika"
                        });
                });

            modelBuilder.Entity("VPlati.Models.Ocena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OcenaSmeri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ocena");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OcenaSmeri = "4a"
                        },
                        new
                        {
                            Id = 2,
                            OcenaSmeri = "4b"
                        },
                        new
                        {
                            Id = 3,
                            OcenaSmeri = "4c"
                        },
                        new
                        {
                            Id = 4,
                            OcenaSmeri = "5a"
                        },
                        new
                        {
                            Id = 5,
                            OcenaSmeri = "5b"
                        },
                        new
                        {
                            Id = 6,
                            OcenaSmeri = "5c"
                        },
                        new
                        {
                            Id = 7,
                            OcenaSmeri = "6a"
                        },
                        new
                        {
                            Id = 8,
                            OcenaSmeri = "6a+"
                        },
                        new
                        {
                            Id = 9,
                            OcenaSmeri = "6b"
                        },
                        new
                        {
                            Id = 10,
                            OcenaSmeri = "6b+"
                        },
                        new
                        {
                            Id = 11,
                            OcenaSmeri = "6c"
                        },
                        new
                        {
                            Id = 12,
                            OcenaSmeri = "6c+"
                        },
                        new
                        {
                            Id = 13,
                            OcenaSmeri = "7a"
                        },
                        new
                        {
                            Id = 14,
                            OcenaSmeri = "7a+"
                        },
                        new
                        {
                            Id = 15,
                            OcenaSmeri = "7b"
                        },
                        new
                        {
                            Id = 16,
                            OcenaSmeri = "7b+"
                        },
                        new
                        {
                            Id = 17,
                            OcenaSmeri = "7c"
                        },
                        new
                        {
                            Id = 18,
                            OcenaSmeri = "7c+"
                        },
                        new
                        {
                            Id = 19,
                            OcenaSmeri = "8a"
                        },
                        new
                        {
                            Id = 20,
                            OcenaSmeri = "8a+"
                        },
                        new
                        {
                            Id = 21,
                            OcenaSmeri = "8b"
                        },
                        new
                        {
                            Id = 22,
                            OcenaSmeri = "8b+"
                        },
                        new
                        {
                            Id = 23,
                            OcenaSmeri = "8c"
                        },
                        new
                        {
                            Id = 24,
                            OcenaSmeri = "8c+"
                        },
                        new
                        {
                            Id = 25,
                            OcenaSmeri = "9a"
                        },
                        new
                        {
                            Id = 26,
                            OcenaSmeri = "9a+"
                        },
                        new
                        {
                            Id = 27,
                            OcenaSmeri = "9b"
                        },
                        new
                        {
                            Id = 28,
                            OcenaSmeri = "9b+"
                        },
                        new
                        {
                            Id = 29,
                            OcenaSmeri = "9c"
                        });
                });

            modelBuilder.Entity("VPlati.Models.OcenaSmeri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NacinPreplezanjaSmeriId")
                        .HasColumnType("int");

                    b.Property<int>("OcenaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OcenaSmeriDatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("PlezalecId")
                        .HasColumnType("int");

                    b.Property<int>("SmerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NacinPreplezanjaSmeriId");

                    b.HasIndex("OcenaId");

                    b.HasIndex("PlezalecId");

                    b.HasIndex("SmerId");

                    b.ToTable("OcenaSmeri");
                });

            modelBuilder.Entity("VPlati.Models.Opozorilo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OpozoriloDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("OpozoriloText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlezalisceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlezalisceId");

                    b.ToTable("Opozorila");
                });

            modelBuilder.Entity("VPlati.Models.Plezalec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumRojstva")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PlezalecInfo")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Priimek")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlikaPlezalca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("VPlati.Models.Plezalisce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CasDostopa")
                        .HasColumnType("int");

                    b.Property<string>("ImePlezalisca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpisDostopa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlikaPlezalisca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsmerjenostStene")
                        .HasColumnType("int");

                    b.Property<int>("Visina")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Plezalisca");
                });

            modelBuilder.Entity("VPlati.Models.Sektor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImeSektorja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlezalisceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlezalisceId");

                    b.ToTable("Sektorji");
                });

            modelBuilder.Entity("VPlati.Models.Smer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Dolzina")
                        .HasColumnType("int");

                    b.Property<string>("ImeSmeri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opremjevalec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PrviVzpon")
                        .HasColumnType("datetime2");

                    b.Property<int>("SektorId")
                        .HasColumnType("int");

                    b.Property<int>("SteviloVzponov")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SektorId");

                    b.ToTable("Smeri");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("VPlati.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("VPlati.Models.Plezalec", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("VPlati.Models.Plezalec", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("VPlati.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VPlati.Models.Plezalec", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("VPlati.Models.Plezalec", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VPlati.Models.Komentar", b =>
                {
                    b.HasOne("VPlati.Models.Plezalec", "Plezalec")
                        .WithMany()
                        .HasForeignKey("PlezalecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VPlati.Models.Smer", "Smer")
                        .WithMany("Komentarji")
                        .HasForeignKey("SmerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VPlati.Models.OcenaSmeri", b =>
                {
                    b.HasOne("VPlati.Models.NacinPreplezanjaSmeri", "NacinPreplezanjaSmeri")
                        .WithMany()
                        .HasForeignKey("NacinPreplezanjaSmeriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VPlati.Models.Ocena", "Ocena")
                        .WithMany()
                        .HasForeignKey("OcenaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VPlati.Models.Plezalec", "Plezalec")
                        .WithMany()
                        .HasForeignKey("PlezalecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VPlati.Models.Smer", "Smer")
                        .WithMany("OceneSmeri")
                        .HasForeignKey("SmerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VPlati.Models.Opozorilo", b =>
                {
                    b.HasOne("VPlati.Models.Plezalisce", "Plezalisce")
                        .WithMany("Opozorila")
                        .HasForeignKey("PlezalisceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VPlati.Models.Sektor", b =>
                {
                    b.HasOne("VPlati.Models.Plezalisce", "Plezalisce")
                        .WithMany("Sektorji")
                        .HasForeignKey("PlezalisceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VPlati.Models.Smer", b =>
                {
                    b.HasOne("VPlati.Models.Sektor", "Sektor")
                        .WithMany("Smeri")
                        .HasForeignKey("SektorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
